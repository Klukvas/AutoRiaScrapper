{
  "openapi": "3.0.3",
  "info": {
    "title": "OpenAPI 3.0",
    "description": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.",
    "version": "1.0.11"
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "servers": [
    {
      "url": "http://localhost:5001"
    }
  ],
  "tags": [
    {
      "name": "Cars",
      "description": "Everything about cars"
    }
  ],
  "paths": {
    "/cars/brands/getWithModels": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Cars"
        ],
        "summary": "Brand in pair of the model",
        "description": "Brand in pair of the model",
        "operationId": "get_model_by_brand",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BrandModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/cars/brands/getAll": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "All brands",
        "description": "All brands",
        "operationId": "get_all_brands",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Brands"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Brands"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/cars/models/getAll": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "All models",
        "description": "All models",
        "operationId": "get_all_models",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Models"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Models"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      }
    },
    "/cars/categories/getAll": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Get all categories",
        "description": "Get all categories",
        "operationId": "get_all_categories",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Categories"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Categories"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      }
    },
    "/cars/gearboxes/getAll": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Get all gearboxes",
        "description": "Get all gearboxes",
        "operationId": "get_all_gearboxes",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gearboxes"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Gearboxes"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      }
    },
    "/cars/getAllData": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Returns all available data of cars",
        "description": "Returns all available data of cars",
        "operationId": "get_all_car_data",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllData"
                }
              }
            }
          }
        }
      }
    },
    "/cars/startParse": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Start parse cars",
        "description": "Start parse cars",
        "operationId": "start_parse",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartParse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StartParse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "integer"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "AllData": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "price_usd": {
                  "type": "integer"
                },
                "price_uah": {
                  "type": "integer"
                },
                "price_eur": {
                  "type": "integer"
                },
                "race": {
                  "type": "integer"
                },
                "year": {
                  "type": "integer"
                },
                "fuel_name": {
                  "type": "string"
                },
                "fuel_value": {
                  "type": "number"
                },
                "has_damage": {
                  "type": "boolean"
                },
                "link": {
                  "type": "string"
                },
                "vin": {
                  "type": "string"
                },
                "parsed_from": {
                  "type": "string"
                },
                "model_name": {
                  "type": "string"
                },
                "brand_name": {
                  "type": "string"
                },
                "gearbox_name": {
                  "type": "string"
                },
                "category_name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "StartParse": {
        "properties": {
          "data": {
            "type": "boolean"
          }
        }
      },
      "Gearboxes": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "gearbox_name": {
                  "type": "string"
                },
                "gearbox_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Categories": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "category_name": {
                  "type": "string"
                },
                "category_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Models": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "model_name": {
                  "type": "string"
                },
                "model_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Brands": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "brand_name": {
                  "type": "string"
                },
                "brand_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "BrandModel": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "example": {
                "brand": "honda",
                "model": "civic"
              },
              "properties": {
                "brand": {
                  "type": "string",
                  "example": "volvo"
                },
                "model": {
                  "type": "string",
                  "example": "v90"
                }
              }
            }
          }
        }
      }
    }
  }
}